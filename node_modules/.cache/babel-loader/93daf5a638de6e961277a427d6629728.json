{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Welcome\\\\Videos\\\\Heaven Riders Car customisation\\\\src\\\\components\\\\CustomColorPage\\\\ColorChoices\\\\ColorChoices.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCustomItem, changeCustomItem } from \"../../../store/actions/custom.action\";\nimport ColorChoicesItem from \"./ColorChoicesItem/ColorChoicesItem\";\nimport Select from \"../../Select/Select\";\nexport const ColorChoices = ({\n  colors,\n  byId,\n  setCustomItem,\n  changeCustomItem,\n  onChange\n}) => {\n  useEffect(() => {\n    if (colors.length) {\n      setCustomItem(colors[0]);\n      onChange(colors[0].id);\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const onClick = (isActive, id) => {\n    if (isActive) return;\n    onChange(id);\n    changeCustomItem(byId[id]);\n  };\n\n  return /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, colors.map(color => /*#__PURE__*/React.createElement(Select.Option, {\n    key: color.id,\n    id: color.id,\n    onClick: onClick,\n    children: /*#__PURE__*/React.createElement(ColorChoicesItem, Object.assign({}, color, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = ({\n  color\n}) => ({\n  colors: !!color.idsArray ? color.idsArray.map(id => color.byId[id]) : [],\n  byId: !!color.byId ? color.byId : {}\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCustomItem: (...arg) => dispatch(setCustomItem(...arg)),\n    changeCustomItem: (...arg) => dispatch(changeCustomItem(...arg))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorChoices);","map":{"version":3,"sources":["C:/Users/Welcome/Videos/Heaven Riders Car customisation/src/components/CustomColorPage/ColorChoices/ColorChoices.js"],"names":["React","useEffect","connect","setCustomItem","changeCustomItem","ColorChoicesItem","Select","ColorChoices","colors","byId","onChange","length","id","onClick","isActive","map","color","mapStateToProps","idsArray","mapDispatchToProps","dispatch","arg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,aADF,EAEEC,gBAFF,QAGO,sCAHP;AAIA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,MAD2B;AAE3BC,EAAAA,IAF2B;AAG3BN,EAAAA,aAH2B;AAI3BC,EAAAA,gBAJ2B;AAK3BM,EAAAA;AAL2B,CAAD,KAMtB;AACJT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,MAAM,CAACG,MAAX,EAAmB;AACjBR,MAAAA,aAAa,CAACK,MAAM,CAAC,CAAD,CAAP,CAAb;AACAE,MAAAA,QAAQ,CAACF,MAAM,CAAC,CAAD,CAAN,CAAUI,EAAX,CAAR;AACD,KAJa,CAKd;;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,OAAO,GAAG,CAACC,QAAD,EAAWF,EAAX,KAAkB;AAChC,QAAIE,QAAJ,EAAc;AACdJ,IAAAA,QAAQ,CAACE,EAAD,CAAR;AACAR,IAAAA,gBAAgB,CAACK,IAAI,CAACG,EAAD,CAAL,CAAhB;AACD,GAJD;;AAMA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACO,GAAP,CAAWC,KAAK,iBACf,oBAAC,MAAD,CAAQ,MAAR;AACE,IAAA,GAAG,EAAEA,KAAK,CAACJ,EADb;AAEE,IAAA,EAAE,EAAEI,KAAK,CAACJ,EAFZ;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,QAAQ,eAAE,oBAAC,gBAAD,oBAAsBG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAYD,CAjCM;;AAmCP,MAAMC,eAAe,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,MAAgB;AACtCR,EAAAA,MAAM,EAAE,CAAC,CAACQ,KAAK,CAACE,QAAR,GAAmBF,KAAK,CAACE,QAAN,CAAeH,GAAf,CAAmBH,EAAE,IAAII,KAAK,CAACP,IAAN,CAAWG,EAAX,CAAzB,CAAnB,GAA8D,EADhC;AAEtCH,EAAAA,IAAI,EAAE,CAAC,CAACO,KAAK,CAACP,IAAR,GAAeO,KAAK,CAACP,IAArB,GAA4B;AAFI,CAAhB,CAAxB;;AAKA,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLjB,IAAAA,aAAa,EAAE,CAAC,GAAGkB,GAAJ,KAAYD,QAAQ,CAACjB,aAAa,CAAC,GAAGkB,GAAJ,CAAd,CAD9B;AAELjB,IAAAA,gBAAgB,EAAE,CAAC,GAAGiB,GAAJ,KAAYD,QAAQ,CAAChB,gBAAgB,CAAC,GAAGiB,GAAJ,CAAjB;AAFjC,GAAP;AAID,CALD;;AAOA,eAAenB,OAAO,CACpBe,eADoB,EAEpBE,kBAFoB,CAAP,CAGbZ,YAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setCustomItem,\n  changeCustomItem\n} from \"../../../store/actions/custom.action\";\nimport ColorChoicesItem from \"./ColorChoicesItem/ColorChoicesItem\";\nimport Select from \"../../Select/Select\";\n\nexport const ColorChoices = ({\n  colors,\n  byId,\n  setCustomItem,\n  changeCustomItem,\n  onChange\n}) => {\n  useEffect(() => {\n    if (colors.length) {\n      setCustomItem(colors[0]);\n      onChange(colors[0].id);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const onClick = (isActive, id) => {\n    if (isActive) return;\n    onChange(id);\n    changeCustomItem(byId[id]);\n  };\n\n  return (\n    <Select>\n      {colors.map(color => (\n        <Select.Option\n          key={color.id}\n          id={color.id}\n          onClick={onClick}\n          children={<ColorChoicesItem {...color} />}\n        />\n      ))}\n    </Select>\n  );\n};\n\nconst mapStateToProps = ({ color }) => ({\n  colors: !!color.idsArray ? color.idsArray.map(id => color.byId[id]) : [],\n  byId: !!color.byId ? color.byId : {}\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCustomItem: (...arg) => dispatch(setCustomItem(...arg)),\n    changeCustomItem: (...arg) => dispatch(changeCustomItem(...arg))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ColorChoices);\n"]},"metadata":{},"sourceType":"module"}